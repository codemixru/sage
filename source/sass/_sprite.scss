/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$s-behance-name: 's-behance';
$s-behance-x: 94px;
$s-behance-y: 0px;
$s-behance-offset-x: -94px;
$s-behance-offset-y: 0px;
$s-behance-width: 56px;
$s-behance-height: 36px;
$s-behance-total-width: 150px;
$s-behance-total-height: 125px;
$s-behance-image: 'sprite.png';
$s-behance: (94px, 0px, -94px, 0px, 56px, 36px, 150px, 125px, 'sprite.png', 's-behance', );
$s-copy-name: 's-copy';
$s-copy-x: 48px;
$s-copy-y: 0px;
$s-copy-offset-x: -48px;
$s-copy-offset-y: 0px;
$s-copy-width: 46px;
$s-copy-height: 48px;
$s-copy-total-width: 150px;
$s-copy-total-height: 125px;
$s-copy-image: 'sprite.png';
$s-copy: (48px, 0px, -48px, 0px, 46px, 48px, 150px, 125px, 'sprite.png', 's-copy', );
$s-facebook-name: 's-facebook';
$s-facebook-x: 45px;
$s-facebook-y: 48px;
$s-facebook-offset-x: -45px;
$s-facebook-offset-y: -48px;
$s-facebook-width: 21px;
$s-facebook-height: 42px;
$s-facebook-total-width: 150px;
$s-facebook-total-height: 125px;
$s-facebook-image: 'sprite.png';
$s-facebook: (45px, 48px, -45px, -48px, 21px, 42px, 150px, 125px, 'sprite.png', 's-facebook', );
$s-linkedin-name: 's-linkedin';
$s-linkedin-x: 94px;
$s-linkedin-y: 36px;
$s-linkedin-offset-x: -94px;
$s-linkedin-offset-y: -36px;
$s-linkedin-width: 43px;
$s-linkedin-height: 42px;
$s-linkedin-total-width: 150px;
$s-linkedin-total-height: 125px;
$s-linkedin-image: 'sprite.png';
$s-linkedin: (94px, 36px, -94px, -36px, 43px, 42px, 150px, 125px, 'sprite.png', 's-linkedin', );
$s-many-name: 's-many';
$s-many-x: 0px;
$s-many-y: 0px;
$s-many-offset-x: 0px;
$s-many-offset-y: 0px;
$s-many-width: 48px;
$s-many-height: 48px;
$s-many-total-width: 150px;
$s-many-total-height: 125px;
$s-many-image: 'sprite.png';
$s-many: (0px, 0px, 0px, 0px, 48px, 48px, 150px, 125px, 'sprite.png', 's-many', );
$s-mark-name: 's-mark';
$s-mark-x: 66px;
$s-mark-y: 48px;
$s-mark-offset-x: -66px;
$s-mark-offset-y: -48px;
$s-mark-width: 24px;
$s-mark-height: 32px;
$s-mark-total-width: 150px;
$s-mark-total-height: 125px;
$s-mark-image: 'sprite.png';
$s-mark: (66px, 48px, -66px, -48px, 24px, 32px, 150px, 125px, 'sprite.png', 's-mark', );
$s-mouse-name: 's-mouse';
$s-mouse-x: 0px;
$s-mouse-y: 93px;
$s-mouse-offset-x: 0px;
$s-mouse-offset-y: -93px;
$s-mouse-width: 22px;
$s-mouse-height: 32px;
$s-mouse-total-width: 150px;
$s-mouse-total-height: 125px;
$s-mouse-image: 'sprite.png';
$s-mouse: (0px, 93px, 0px, -93px, 22px, 32px, 150px, 125px, 'sprite.png', 's-mouse', );
$s-pinterest-name: 's-pinterest';
$s-pinterest-x: 0px;
$s-pinterest-y: 48px;
$s-pinterest-offset-x: 0px;
$s-pinterest-offset-y: -48px;
$s-pinterest-width: 45px;
$s-pinterest-height: 45px;
$s-pinterest-total-width: 150px;
$s-pinterest-total-height: 125px;
$s-pinterest-image: 'sprite.png';
$s-pinterest: (0px, 48px, 0px, -48px, 45px, 45px, 150px, 125px, 'sprite.png', 's-pinterest', );
$s-play-video-name: 's-play-video';
$s-play-video-x: 43px;
$s-play-video-y: 93px;
$s-play-video-offset-x: -43px;
$s-play-video-offset-y: -93px;
$s-play-video-width: 17px;
$s-play-video-height: 20px;
$s-play-video-total-width: 150px;
$s-play-video-total-height: 125px;
$s-play-video-image: 'sprite.png';
$s-play-video: (43px, 93px, -43px, -93px, 17px, 20px, 150px, 125px, 'sprite.png', 's-play-video', );
$s-search-name: 's-search';
$s-search-x: 22px;
$s-search-y: 93px;
$s-search-offset-x: -22px;
$s-search-offset-y: -93px;
$s-search-width: 21px;
$s-search-height: 21px;
$s-search-total-width: 150px;
$s-search-total-height: 125px;
$s-search-image: 'sprite.png';
$s-search: (22px, 93px, -22px, -93px, 21px, 21px, 150px, 125px, 'sprite.png', 's-search', );
$spritesheet-width: 150px;
$spritesheet-height: 125px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($s-behance, $s-copy, $s-facebook, $s-linkedin, $s-many, $s-mark, $s-mouse, $s-pinterest, $s-play-video, $s-search, );
$spritesheet: (150px, 125px, 'sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Here are example usages in HTML:

`display: block` sprite:
<div class="icon-home"></div>

`display: inline-block` sprite:
<img class="icon-home" />
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
